import net.fabricmc.loom.task.RemapJarTask

plugins {
	id 'io.github.ladysnake.chenille' version '0.6.2-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version "1.6.0"
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets {
	dummy
}

task remapLibJar(type: RemapJarTask, dependsOn: project.jar) {
	archiveClassifier.set('lib')
	inputFile.set(jar.archiveFile)
	addNestedDependencies.set(false)
}

build.dependsOn(remapLibJar)


java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapLibJar) {
				classifier ''
				builtBy remapLibJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		mavenLocal()
	}
}

chenille {
	configureTestmod {
		withBaseTestRuns()
		withDependencyConfiguration()
	}

	configurePublishing {
		withArtifactory()
		withCurseforgeRelease()
		withGithubRelease()
	}

	license = 'LGPL'
	javaVersion = 17
}

repositories {
	mavenCentral()
	mavenLocal()
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'dev\\.onyxstudios.*'
		}
	}
	maven {
		url = 'https://oss.sonatype.org/content/repositories/snapshots'
		content {
			includeGroup 'me.lucko'
		}
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/releases"
		content {
			includeGroup 'com.terraformersmc'
		}
	}
	maven {
		url = "https://maven.siphalor.de/"
		content {
			includeGroup 'de.siphalor'
		}
	}
	maven {
		url = "https://maven.shedaniel.me/"
		content {
			includeGroupByRegex 'me\\.shedaniel\\..*'
			includeGroup 'me.sargunvohra.mcmods'
		}
	}
	maven {
		url "https://cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}
	maven {
		name = 'JitPack'
		url = 'https://jitpack.io'
		content {
			includeGroupByRegex '(io|com)\\.github\\..*'
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modIncludeImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${cca_version}"
	modIncludeImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${cca_version}"
	modIncludeImplementation "me.lucko:fabric-permissions-api:${fpa_version}"

	compileOnly "com.demonwav.mcdev:annotations:1.0"

	modLocalImplementation "curse.maven:BackSlot-402739:${backslot_version}"
	modLocalRuntime "me.shedaniel.cloth:cloth-config-fabric:${cloth_config_version}"

	modLocalRuntime "com.terraformersmc:modmenu:${modmenu_version}"
	modCompileOnly modLocalRuntime("io.github.ladysnake:elmendorf:${elmendorf_version}")

	testImplementation 'junit:junit:4.13'
	testImplementation 'org.mockito:mockito-core:3.+'

	testmodImplementation sourceSets.main.output
	annotationProcessor(sourceSets.dummy.output)
}

test {
	useJUnit()

	maxHeapSize = '1G'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 (pre2) upwards uses Java 17.
	it.options.release.set(17)
}

jar {
	from("COPYING.LESSER") {
		rename { "LICENSE_${project.archivesBaseName}"}
	}
}
